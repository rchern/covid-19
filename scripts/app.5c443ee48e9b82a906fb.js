(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),a(1);const n=a(2),o=a(3),i=a(4);class s{constructor(t){this.mapId=t,this.population={},this.regularShades=["FFFFFF","EDF8FB","BFD3E6","9EBCDA","8C96C6","8C6BB1","88419D","6E016B"],this.growthRateShades=["FFFFFF","31A354","A1D99B","E5F5E0","FFF7BC","FEE0D2","FC9272","DE2D26","333333"],this.yesNoShades=["DE2D26","FFFFFF","31A354"],this.max={newDeaths:0,totalDeaths:0,newConfirmed:0,totalConfirmed:0,newDeathsPerCapita:0,totalDeathsPerCapita:0,newConfirmedPerCapita:0,totalConfirmedPerCapita:0,totalConfirmedGrowthToday:0,totalDeathsGrowthToday:0,totalConfirmedGrowthRate:0,totalDeathsGrowthRate:0,newDeathsAverage:0,newConfirmedAverage:0,newDeathsPerCapitaAverage:0,newConfirmedPerCapitaAverage:0,totalDeathsGrowthTodayAverage:0,totalConfirmedGrowthTodayAverage:0,reopenTrajectory:1}}initialize(){$.when(this.fetchData()).done(()=>{this.legends=this.generateLegends(),this.map=new n.default(this.mapId,"totalConfirmed",this.covid19,this.max,this.legends),this.map.styleMap()})}fetchData(){return $.when(this.fetchPopulationData()).then(()=>this.fetchCovid19Data())}fetchPopulationData(){return $.getJSON("./data/population.json").done(t=>{this.population=t})}checkMax(t,e){const a=t[e]||0;a>(this.max[e]||0)&&(this.max[e]=a)}fetchCovid19Data(){return $.getJSON("https://usafactsstatic.blob.core.windows.net/public/2020/coronavirus-timeline/allData.json").done(t=>{const e=t[0].confirmed.length;this.covid19={counties:{},days:[]},t.forEach(t=>{if("00"===t.countyFIPS||t.deaths[e-1]>t.confirmed[e-1])return;const a={county:t.county,stateAbbr:t.stateAbbr,population:this.population[t.countyFIPS]};this.covid19.counties[t.countyFIPS]=a;for(let n=0;n<e;n++){const e=n<=1?0:t.confirmed[n-2],o=n<=1?0:t.deaths[n-2];let i=0===n?0:t.confirmed[n-1],s=0===n?0:t.deaths[n-1];i<e&&(i=e),s<o&&(s=o);let r=t.confirmed[n],h=t.deaths[n];r<i&&(r=i),h<s&&(h=s);const d=r-i,l=h-s,c=i-e,m=s-o,g=0===i?0:d/i*100,u=0===s?0:l/s*100,w=0===e?0:c/e*100,f=0===o?0:m/o*100,p={totalConfirmed:r,totalDeaths:h,newConfirmed:d,newDeaths:l,totalConfirmedGrowthToday:g,totalDeathsGrowthToday:u,totalConfirmedGrowthRate:0===w?0:g/w*100,totalDeathsGrowthRate:0===f?0:u/f*100};if(this.checkMax(p,"totalConfirmed"),this.checkMax(p,"totalDeaths"),this.checkMax(p,"newConfirmed"),this.checkMax(p,"newDeaths"),null!==a.population){const t=a.population/1e6;p.totalConfirmedPerCapita=p.totalConfirmed/t,p.totalDeathsPerCapita=p.totalDeaths/t,p.newConfirmedPerCapita=p.newConfirmed/t,p.newDeathsPerCapita=p.newDeaths/t,this.checkMax(p,"totalConfirmedPerCapita"),this.checkMax(p,"totalDeathsPerCapita"),this.checkMax(p,"newConfirmedPerCapita"),this.checkMax(p,"newDeathsPerCapita")}else console.log(t.county,"no population");null==this.covid19.days[n]&&(this.covid19.days[n]={national:{},data:{}}),this.covid19.days[n].data[t.countyFIPS]=p}}),this.covid19.days.forEach((t,e)=>{t.national=Object.keys(t.data).reduce((a,n)=>{const o=t.data[n];a.totalConfirmed=(a.totalConfirmed||0)+o.totalConfirmed,a.totalDeaths=(a.totalDeaths||0)+o.totalDeaths,a.newConfirmed=(a.newConfirmed||0)+o.newConfirmed,a.newDeaths=(a.newDeaths||0)+o.newDeaths;const i=a.totalConfirmed-a.newConfirmed;a.totalConfirmedGrowthToday=0===i?0:a.newConfirmed/i*100;const s=a.totalDeaths-a.newDeaths;a.totalDeathsGrowthToday=0===s?0:a.newDeaths/s*100;const r=this.getWindow(e).map(t=>t.data[n]);if(o.newConfirmedAverage=r.reduce((t,e)=>t+e.newConfirmed,0)/r.length,o.newDeathsAverage=r.reduce((t,e)=>t+e.newDeaths,0)/r.length,o.totalConfirmedGrowthTodayAverage=r.reduce((t,e)=>t+e.totalConfirmedGrowthToday,0)/r.length,o.totalDeathsGrowthTodayAverage=r.reduce((t,e)=>t+e.totalDeathsGrowthToday,0)/r.length,this.checkMax(o,"newConfirmedAverage"),this.checkMax(o,"newDeathsAverage"),this.checkMax(o,"totalConfirmedGrowthTodayAverage"),this.checkMax(o,"totalDeathsGrowthTodayAverage"),o.reopenTrajectory=0,o.totalConfirmed>0&&e>=13){const t=this.covid19.days.slice(Math.max(0,e-14),e).map(t=>t.data[n].newConfirmedAverage),a=(t[t.length-1]-t[0])/t.length,i=[...t].sort((t,e)=>e-t),s=Math.floor(t.length/2),r=(i[s-1]+i[s])/2,h=t[0]>r&&t[t.length-1]<r,d=t.every(t=>0==t);o.reopenTrajectory=a<0&&(d||h)?1:-1}return null!==this.covid19.counties[n].population&&(o.newConfirmedPerCapitaAverage=r.reduce((t,e)=>t+e.newConfirmedPerCapita,0)/r.length,o.newDeathsPerCapitaAverage=r.reduce((t,e)=>t+e.newDeathsPerCapita,0)/r.length,this.checkMax(o,"newConfirmedPerCapitaAverage"),this.checkMax(o,"newDeathsPerCapitaAverage")),a},{})}),this.covid19.days.forEach((t,e)=>{if(e>0){const a=this.covid19.days[e-1].national.totalConfirmedGrowthToday;t.national.totalConfirmedGrowthRate=0===a?0:t.national.totalConfirmedGrowthToday/a*100;const n=this.covid19.days[e-1].national.totalDeathsGrowthToday;t.national.totalDeathsGrowthRate=0===n?0:t.national.totalDeathsGrowthToday/n*100}const a=this.getWindow(e).map(t=>t.national);t.national.newConfirmedAverage=a.reduce((t,e)=>t+e.newConfirmed,0)/a.length,t.national.newDeathsAverage=a.reduce((t,e)=>t+e.newDeaths,0)/a.length,t.national.totalConfirmedGrowthTodayAverage=a.reduce((t,e)=>t+e.totalConfirmedGrowthToday,0)/a.length,t.national.totalDeathsGrowthTodayAverage=a.reduce((t,e)=>t+e.totalDeathsGrowthToday,0)/a.length})})}getWindow(t){const e=Math.max(0,t-3),a=Math.min(this.covid19.days.length,t+4);return this.covid19.days.slice(e,a)}generateLegends(){return Object.keys(this.max).reduce((t,e)=>{if(e.indexOf("GrowthToday")>0)t[e]=new i.Legend([new i.LegendItem(0,this.regularShades[0],0,0,!0),new i.LegendItem(1,this.regularShades[1],1,16,!0),new i.LegendItem(2,this.regularShades[2],17,32,!0),new i.LegendItem(3,this.regularShades[3],33,48,!0),new i.LegendItem(4,this.regularShades[4],49,64,!0),new i.LegendItem(5,this.regularShades[5],65,80,!0),new i.LegendItem(6,this.regularShades[6],81,99,!0),new i.LegendItem(7,this.regularShades[7],100,null,!0)]);else if(e.indexOf("GrowthRate")>0)t[e]=new i.Legend([new i.LegendItem(0,this.growthRateShades[0],0,0,!0),new i.LegendItem(1,this.growthRateShades[1],1,33,!0),new i.LegendItem(2,this.growthRateShades[2],34,66,!0),new i.LegendItem(3,this.growthRateShades[3],67,99,!0),new i.LegendItem(4,this.growthRateShades[4],100,100,!0),new i.LegendItem(5,this.growthRateShades[5],101,133,!0),new i.LegendItem(6,this.growthRateShades[6],134,166,!0),new i.LegendItem(7,this.growthRateShades[7],167,199,!0),new i.LegendItem(7,this.growthRateShades[8],200,null,!0)]);else if("reopenTrajectory"===e)t[e]=new i.Legend([new i.LegendItem(0,this.yesNoShades[0],-1,-1,!0,"Not Ready to Re-Open"),new i.LegendItem(1,this.yesNoShades[1],0,0,!0,"Not Enough Data"),new i.LegendItem(2,this.yesNoShades[2],1,1,!0,"Ready To Re-Open")]);else{const a=new o.default(this.regularShades.length,this.max[e]),n=this.regularShades.map((t,e)=>new i.LegendItem(e,t,0===e?0:a.getValue(e-1)+1,a.getValue(e),!0));t[e]=new i.Legend(n)}return t},{})}}window.initMap=function(){const t=new s("map");window.covid19=t,t.initialize()}},function(t,e,a){},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t,e,a,n,o){this.mapId=t,this.metric=e,this.data=a,this.max=n,this.legends=o,this.currentDayIndex=0,this.animationId=null,this.startDate=new Date(2020,0,22),this.shades=[{code:"F2F0F7",on:!0},{code:"DADAEB",on:!0},{code:"BCBDDC",on:!0},{code:"9E9AC8",on:!0},{code:"807DBA",on:!0},{code:"6A51A3",on:!0},{code:"4A1486",on:!0},{code:"333333",on:!0}],this.currentDayIndex=a.days.length-1,this.map=new google.maps.Map(document.getElementById(this.mapId),{zoom:4,center:{lat:38.95809,lng:-95.26726}}),this.map.data.loadGeoJson("./data/gz_2010_us_050_00_20m.json"),this.infoWindow=new google.maps.InfoWindow,this.map.data.addListener("click",t=>{this.showCountyDetails(t)}),this.handleMetric(),this.handleAnimation(),this.handleToggles(),this.handlePopulation(),this.styleMap()}handlePopulation(){const t=$("#minPopulation");t.on("change",()=>{const e=t.val();this.minPopulation=""===e?void 0:1e3*e,this.styleMap()});const e=$("#maxPopulation");e.on("change",()=>{const t=e.val();this.maxPopulation=""===t?void 0:1e3*t,this.styleMap()})}handleToggles(){$("#legend").on("click",".legend-value",t=>{const e=$(t.currentTarget),a=e.data("position");this.legends[this.metric].toggleItem(a),e.toggleClass("on"),this.styleMap()})}handleAnimation(){const t=t=>{t>=0&&t<=this.data.days.length-1&&(this.currentDayIndex=t,this.styleMap())};$("#rewind-all").on("click",()=>t(0)),$("#rewind-1").on("click",()=>t(this.currentDayIndex-1)),$("#fast-forward-1").on("click",()=>t(this.currentDayIndex+1)),$("#toggle").on("click",()=>{if(null==this.animationId){$("#toggle").removeClass("play").addClass("pause");const e=()=>{this.animationId=setTimeout(()=>{this.currentDayIndex<this.data.days.length-1?(t(this.currentDayIndex+1),e()):$("#toggle").click()},50)};e()}else $("#toggle").removeClass("pause").addClass("play"),clearTimeout(this.animationId),this.animationId=null}),$("#fast-forward-all").on("click",()=>t(this.data.days.length-1))}displayDate(){const t=new Date(this.startDate.getFullYear(),this.startDate.getMonth(),this.startDate.getDate());t.setDate(t.getDate()+this.currentDayIndex),$("#currentDate").text(t.toLocaleDateString("en-US"));const e=this.metric.indexOf("Growth")>=0,a=this.data.days[this.currentDayIndex].national[this.metric];null==a?($("#nationValue").text(""),$("#national").hide()):($("#nationalValue").text(this.formatNumber(a,e)+(e?"%":"")),$("#national").show())}handleMetric(){const t=$("#metric");t.on("change",()=>{this.metric=t.val(),this.styleMap()})}formatNumber(t,e=!1){return(e?Math.floor(100*t)/100:Math.floor(t)).toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}showCountyDetails(t){const e=this.getGeoId(t.feature),a=this.data.days[this.currentDayIndex].data[e],n=this.data.counties[e],o=`\n<div data-fips="${e}"><b>${n.county}, ${n.stateAbbr}</b></div>\n<div>Population:  ${this.formatNumber(n.population)}</div>\n<p>Day ${this.currentDayIndex}</p>\n<p></p>\n<p>\n    14-day Downward Case Trajectory for Reopen: ${-1==a.reopenTrajectory?"no":1==a.reopenTrajectory?"yes":"not enough data"}\n<p>\n    New Confirmed: ${this.formatNumber(a.newConfirmed)} (${this.formatNumber(a.newConfirmedAverage)} avg)\n    <br />\n    ${this.formatNumber(a.newConfirmedPerCapita)} per million (${this.formatNumber(a.newConfirmedPerCapitaAverage)} avg)\n</p>\n<p>\n    Total Confirmed: ${this.formatNumber(a.totalConfirmed)}\n    <br />\n    ${this.formatNumber(a.totalConfirmedPerCapita)} per million\n</p>\n<p>\n    Confirmed Growth:\n    ${this.formatNumber(a.totalConfirmedGrowthToday,!0)}% yesterday (${this.formatNumber(a.totalConfirmedGrowthTodayAverage,!0)}% avg)\n    <br />\n    ${this.formatNumber(a.totalConfirmedGrowthRate,!0)}% change from yesterday\n</p>\n<p></p>\n<p>\n    New Deaths: ${this.formatNumber(a.newDeaths)} (${this.formatNumber(a.newDeathsAverage)} avg)\n    <br />\n    ${this.formatNumber(a.newDeathsPerCapita)} per million (${this.formatNumber(a.newDeathsPerCapitaAverage)} avg)\n</p>\n<p>\n    Total Deaths: ${this.formatNumber(a.totalDeaths)}\n    <br />\n    ${this.formatNumber(a.totalDeathsPerCapita)} per million\n</p>\n<p>\n    Deaths Growth:\n    ${this.formatNumber(a.totalDeathsGrowthToday,!0)}% from yesterday (${this.formatNumber(a.totalDeathsGrowthTodayAverage,!0)}% avg)\n    <br />\n    ${this.formatNumber(a.totalDeathsGrowthRate,!0)}% change from yesterday\n</p>\n  `;this.infoWindow.setContent(o),this.infoWindow.setPosition(t.latLng),this.infoWindow.setOptions({pixelOffset:new google.maps.Size(0,-34)}),this.infoWindow.open(this.map)}getGeoId(t){return t.getProperty("GEOID")}styleMap(){this.displayDate();const t=this.currentDayIndex;0==t?$("#rewind-1,#rewind-all").addClass("disabled"):$("#rewind-1,#rewind-all").removeClass("disabled"),t==this.data.days.length-1?$("#fast-forward-1,#fast-forward-all,#toggle").addClass("disabled"):$("#fast-forward-1,#fast-forward-all,#toggle").removeClass("disabled"),this.displayLegend(),this.map.data.setStyle(t=>this.styleFeature(t))}styleFeature(t){const e=this.getGeoId(t),a=this.data.days[this.currentDayIndex].data[e],n=this.data.counties[e];let o="white";if(null!=a){const t=a[this.metric]||0,i=this.formatNumber(t,this.metric.indexOf("Growth")>=0),s=this.legends[this.metric].getPosition(i);null==s&&console.log(e,a,n,t,i,s),s.isOn()&&(null==this.minPopulation||this.minPopulation<=n.population)&&(null==this.maxPopulation||this.maxPopulation>=n.population)&&(o="#"+s.getColor())}return{fillColor:o,strokeWeight:1,strokeColor:"#CCCCCC",fillOpacity:.75}}displayLegend(){const t=this.legends[this.metric];$("#legend").html(t.getHTML())}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t,e){this.buckets=t,this.max=e,this.minp=0,this.maxp=t-1,this.minv=0,this.maxv=Math.log(e),this.scale=(this.maxv-this.minv)/(this.maxp-this.minp)}getPosition(t){if(t<=0)return 0;let e=Math.ceil((Math.log(t)-this.minv)/this.scale+this.minp);return 0===e&&t>0&&(e=1),e}getValue(t){let e=Math.round(Math.exp(this.minv+this.scale*(t-this.minp)));return 0===t&&e>0&&(e=0),e}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.LegendItem=class{constructor(t,e,a,n,o,i){this.position=t,this.color=e,this.min=a,this.max=n,this.on=o,this.text=i}toggle(){this.on=!this.on}isOn(){return this.on}generateLegend(){let t="";return null!=this.text?t=this.text:(t=`${this.min} to ${this.max}`,this.min===this.max?t=`${this.min}`:null===this.min?t=`<= ${this.max}`:null===this.max&&(t=`>= ${this.min}`)),`\n<div class='col-6 col-sm-3'>\n  <div data-position="${this.position}" class="legend-value ${this.on?"on":""}" style="background-color: #${this.color}">\n    <div>${t}</div>\n  </div>\n</div>\n    `}isInRange(t){return(null===this.min||t>=this.min)&&(null===this.max||t<=this.max)}getColor(){return this.color}};e.Legend=class{constructor(t){this.items=t}toggleItem(t){this.items[t].toggle()}getHTML(){let t="";return t+="<div>",t+="<div class='row align-items-center no-gutters'>",this.items.forEach(e=>t+=e.generateLegend()),t+="</div>",t+="</div>",t}isOn(t){return this.items[t].isOn()}getPosition(t){return this.items.find(e=>e.isInRange(Math.floor(Number(t.toString().replace(",","")))))}}}],[[0,1]]]);
//# sourceMappingURL=app.5c443ee48e9b82a906fb.js.map